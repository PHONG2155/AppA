name: Build Android APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/.android-sdk
      ANDROID_HOME: ${{ github.workspace }}/.android-sdk
      PATH: ${{ github.workspace }}/.android-sdk/cmdline-tools/latest/bin:${{ github.workspace }}/.android-sdk/platform-tools:/usr/local/bin:/usr/bin:/bin

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential \
            git \
            zip \
            unzip \
            wget \
            tar \
            openjdk-17-jdk \
            python3-setuptools \
            python3-venv \
            libffi-dev \
            libssl-dev \
            liblzma-dev \
            zlib1g-dev \
            libjpeg-dev \
            libfreetype6-dev \
            cmake

      - name: Install buildozer
        run: |
          pip install --upgrade pip
          pip install buildozer Cython

      - name: Prepare Android SDK / sdkmanager
        run: |
          # Tạo thư mục SDK
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd "$ANDROID_SDK_ROOT/cmdline-tools"

          # Tải commandline-tools chính thức (sdkmanager nằm trong này)
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdtools.zip
          unzip -q cmdtools.zip
          rm cmdtools.zip

          # Google giải nén ra "cmdline-tools", mình rename thành "latest"
          mv cmdline-tools latest

          # Kiểm tra sdkmanager có tồn tại
          test -f "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager"

      - name: Accept Android SDK licenses and install platforms/build-tools
        run: |
          yes | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" --licenses || true

          sdkmanager --sdk_root="$ANDROID_SDK_ROOT" \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;34.0.0"

          yes | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" --licenses

      - name: Build APK (debug)
        run: |
          # buildozer mặc định tìm SDK ở ~/.buildozer/android/platform/android-sdk
          # Ta sẽ link SDK mình đã chuẩn bị vào đó để tránh tải lại và tránh hỏi license
          mkdir -p $HOME/.buildozer/android/platform
          if [ ! -d $HOME/.buildozer/android/platform/android-sdk ]; then
            ln -s "$ANDROID_SDK_ROOT" $HOME/.buildozer/android/platform/android-sdk
          fi

          # Bật chấp nhận license trong spec (nếu dòng đã có thì không sao)
          if ! grep -q "android.accept_sdk_license" buildozer.spec; then
            echo "android.accept_sdk_license = True" >> buildozer.spec
          fi

          buildozer android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: bin/*.apk
